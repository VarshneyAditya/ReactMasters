Theory Assignment:
● - What is `NPM`?
    `NPM` is node package manager which is responsible for managing the package we are using in our react project. It will take care of downloading the asked package and its transitive dependencies.

● - What is `Parcel/Webpack`? Why do we need it?
    `Parcel/Webpack` -> These are the bundlers comes with all of the superpowers required to the react application. Below are the list of features or super-powers provide by the Bundlers.
    1 -> HMR -> Hot Moudle Replacement
    2 -> File Watcher
    3 -> Image Optimization
    4 -> MINIFY
    5 -> Code clean up
    6 -> Caching while Development
    7 -> Port management
    8 -> Https server support at development
    9 -> Creates a faster Build.
    10 -> Parcel-cache 
    11 -> Zero-configuration
    12 -> Consitent Hashing Algorithms
    13 -> Dev and Production Builds
    14 -> Tree-Shaking

● - What is `.parcel-cache`?
    `.parcel-cache` holds the minified version of our latest application build. So Whenever any change made to the application, due to`.parcel-cache` we can expect faster build.

● - What is `npx` ?
    Node Package Execute.

● - What is difference between `dependencies` vs `devDependencies`
    `DevDepndependencies` -> Dependencies that are only required in Dev Environment.
    `Dependencies` -> Dependencies that are required in all of the environment.

● - What is Tree Shaking?
● - What is `Hot Module Replacement`?
    `Hot Module Replacement` -> This is the feature of the BUNDLER through which we can observe automatically creation of the new build whenever any changes to the application made.

● - List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
    1. HMR - Hot Module Replacement
    2. Parcel-cache
    3. Image-optimization
    4. Zero-config
    5. Creates faster Build

● - What is `.gitignore`? What should we add and not add into it?
    Files that will be ignored by the git. We must add all those files to the .gitignore which is autogenerated like node_modules, package.json, package-lock.json, parcel-cache.

● - What is the difference between `package.json` and `package-lock.json`
    `package.json` --> It includes information such as the project's name, version, description, entry points, scripts, dependencies, and more.
    `package-lock.json` --> It is an automatically generated file contaning entry of each package with its resolve version and its transitive dependencies used in the application. It is intended to provide a more deterministic and reproducible build for a project by locking down the version of every installed package.
    This ensures when you install dependencies on another machine, It will installed the exact version that is mentioned in the package-lock.json file reducing the chance of inconsistentcy.

● - Why should I not modify `package-lock.json`?

● - What is `node_modules` ? Is it a good idea to push that on git?
    Inside node_modules we can found all the packages or dependencies installed in our application. No need to push to git.

● - What is the `dist` folder?
    dist folder kept the minified version of the files.
● - What is `browserlists`
    
Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret and ~ - tilda
● Read about Script types in html (MDN Docs)